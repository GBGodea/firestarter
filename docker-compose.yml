version: '3.8'

networks:
  backend:
    name: microservices_backend

services:
  config-server:
    build:
      context: ./config-server
    container_name: microservices-config-server-1
    ports:
      - "8888:8888"
    networks:
      backend:
        aliases:
          - config-server
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  kafka1:
    image: bitnami/kafka:latest
    container_name: kafka1
    depends_on:
      - config-server
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=dce85e49ba5342c2a8d2dfb8d72629fa
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9091
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - backend
    restart: unless-stopped

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    depends_on:
      - kafka1
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval \"db.runCommand({ ping: 1 })\" >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 8
      start_period: 10s
    ports:
      - "27017:27017"
    networks:
      - backend
    restart: unless-stopped

  file-uploader:
    build:
      context: ./file-uploader
      dockerfile: dockerfile
    image: file-uploader:latest
    container_name: file-uploader
    depends_on:
      - config-server
      - kafka1
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
    ports:
      - "8443:8443"
    networks:
      backend:
        aliases:
          - file-uploader
    restart: on-failure

  file-processor:
    build:
      context: ./file-processor
      dockerfile: dockerfile
    image: file-processor:latest
    container_name: file-processor
    depends_on:
      - config-server
      - kafka1
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
    ports:
      - "8081:8081"
    networks:
      - backend
    restart: on-failure

  file-status-processor:
    build:
      context: ./file-status-processor
      dockerfile: dockerfile
    image: file-status-processor:latest
    container_name: file-status-processor
    depends_on:
      - config-server
      - kafka1
      - mongodb
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
    ports:
      - "8444:8444"
    networks:
      - backend
    restart: on-failure

volumes:
  kafka_data: